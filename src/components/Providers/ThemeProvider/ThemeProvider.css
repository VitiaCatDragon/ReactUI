@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');

:root {
    --znui-light-scrollbar-thumb: rgba(70, 79, 69, 0.34);
    --znui-dark-scrollbar-thumb: rgba(185, 208, 183, 0.34);

    /**
     * Shapes
     */
    --znui-shape-none-radius: 0;
    --znui-shape-esm-radius: 4px;
    --znui-shape-sm-radius: 8px;
    --znui-shape-md-radius: 12px;
    --znui-shape-lg-radius: 16px;
    --znui-shape-elg-radius: 28px;
    --znui-shape-full-radius: 50vh;

    /**
     * Insets safe-area
     */
    --znui-safe-area-inset-top: env(safe-area-inset-top);
    --znui-safe-area-inset-bottom: env(safe-area-inset-bottom);
    --znui-safe-area-inset-left: env(safe-area-inset-left);
    --znui-safe-area-inset-right: env(safe-area-inset-right);

    /** Insets keyboard **/
    --znui-keyboard-inset-top: env(keyboard-inset-top);
    --znui-keyboard-inset-bottom: env(keyboard-inset-bottom);
    --znui-keyboard-inset-left: env(keyboard-inset-left);
    --znui-keyboard-inset-right: env(keyboard-inset-right);

    /** Insets all **/
    --znui-all-inset-top: calc(var(--znui-safe-area-inset-top) + var(--znui-keyboard-inset-top));
    --znui-all-inset-bottom: calc(var(--znui-safe-area-inset-bottom) + var(--znui-keyboard-inset-bottom));
    --znui-all-inset-left: calc(var(--znui-safe-area-inset-left) + var(--znui-keyboard-inset-left));
    --znui-all-inset-right: calc(var(--znui-safe-area-inset-right) + var(--znui-keyboard-inset-right));

    /* Motion */
    --znui-standard-motion: cubic-bezier(0.2, 0, 0, 1);
    --znui-standard-accelerate-motion: cubic-bezier(0.3, 0, 1, 1);
    --znui-standard-decelerate-motion: cubic-bezier(0, 0, 0, 1);
    --znui-emphasized-motion: cubic-bezier(0.45, 0.25, 0, 1.1);
    --znui-emphasized-accelerate-motion: cubic-bezier(0.3, 0, 0.8, 0.15);
    --znui-emphasized-decelerate-motion: cubic-bezier(0.05, 0.7, 0.1, 1);
}

.ThemeProvider {
    color-scheme: light;

    /* Primary tokens */
    --znui-primary: var(--md-sys-color-primary-light);
    --znui-on-primary: var(--md-sys-color-on-primary-light);
    --znui-primary-container: var(--md-sys-color-primary-container-light);
    --znui-on-primary-container: var(--md-sys-color-on-primary-container-light);
    --znui-primary-fixed: var(--md-sys-color-primary-fixed-light);
    --znui-on-primary-fixed: var(--md-sys-color-on-primary-fixed-light);
    --znui-on-primary-fixed-variant: var(--md-sys-color-on-primary-fixed-variant-light);

    /* Secondary tokens */
    --znui-secondary: var(--md-sys-color-secondary-light);
    --znui-on-secondary: var(--md-sys-color-on-secondary-light);
    --znui-secondary-container: var(--md-sys-color-secondary-container-light);
    --znui-on-secondary-container: var(--md-sys-color-on-secondary-container-light);
    --znui-secondary-fixed: var(--md-sys-color-secondary-fixed-light);
    --znui-on-secondary-fixed: var(--md-sys-color-on-secondary-fixed-light);
    --znui-on-secondary-fixed-variant: var(--md-sys-color-on-secondary-fixed-variant-light);

    /* Tertiary tokens */
    --znui-tertiary: var(--md-sys-color-tertiary-light);
    --znui-on-tertiary: var(--md-sys-color-on-tertiary-light);
    --znui-tertiary-container: var(--md-sys-color-tertiary-container-light);
    --znui-on-tertiary-container: var(--md-sys-color-on-tertiary-container-light);
    --znui-tertiary-fixed: var(--md-sys-color-tertiary-fixed-light);
    --znui-on-tertiary-fixed: var(--md-sys-color-on-tertiary-fixed-light);
    --znui-on-tertiary-fixed-variant: var(--md-sys-color-on-tertiary-fixed-variant-light);

    /* Error tokens */
    --znui-error: var(--md-sys-color-error-light);
    --znui-on-error: var(--md-sys-color-on-error-light);
    --znui-error-container: var(--md-sys-color-error-container-light);
    --znui-on-error-container: var(--md-sys-color-on-error-container-light);

    /* Surface tokens */
    --znui-surface: var(--md-sys-color-surface-light);
    --znui-surface-dim: var(--md-sys-color-surface-dim-light);
    --znui-surface-bright: var(--md-sys-color-surface-bright-light);

    --znui-surface-container-lowest: var(--md-sys-color-surface-container-lowest-light);
    --znui-surface-container-low: var(--md-sys-color-surface-container-low-light);
    --znui-surface-container: var(--md-sys-color-surface-container-light);
    --znui-surface-container-high: var(--md-sys-color-surface-container-high-light);
    --znui-surface-container-highest: var(--md-sys-color-surface-container-highest-light);

    --znui-on-surface: var(--md-sys-color-on-surface-light);
    --znui-on-surface-variant: var(--md-sys-color-on-surface-variant-light);
    --znui-outline: var(--md-sys-color-outline-light);
    --znui-outline-variant: var(--md-sys-color-outline-variant-light);

    /* Inverse tokens */
    --znui-inverse-surface: var(--md-sys-color-inverse-surface-light);
    --znui-inverse-on-surface: var(--md-sys-color-inverse-on-surface-light);
    --znui-inverse-primary: var(--md-sys-color-inverse-primary-light);

    /* Other tokens */
    --znui-scrim: var(--md-sys-color-scrim-light);
    --znui-shadow: var(--md-sys-color-shadow-light);
    --znui-scrollbar-thumb: var(--znui-surface-variant);
}

.ThemeProvider[data-scheme='dark'] {
    color-scheme: dark;

    /* Primary tokens */
    --znui-primary: var(--md-sys-color-primary-dark);
    --znui-on-primary: var(--md-sys-color-on-primary-dark);
    --znui-primary-container: var(--md-sys-color-primary-container-dark);
    --znui-on-primary-container: var(--md-sys-color-on-primary-container-dark);
    --znui-primary-fixed: var(--md-sys-color-primary-fixed-dark);
    --znui-on-primary-fixed: var(--md-sys-color-on-primary-fixed-dark);
    --znui-on-primary-fixed-variant: var(--md-sys-color-on-primary-fixed-variant-dark);

    /* Secondary tokens */
    --znui-secondary: var(--md-sys-color-secondary-dark);
    --znui-on-secondary: var(--md-sys-color-on-secondary-dark);
    --znui-secondary-container: var(--md-sys-color-secondary-container-dark);
    --znui-on-secondary-container: var(--md-sys-color-on-secondary-container-dark);
    --znui-secondary-fixed: var(--md-sys-color-secondary-fixed-dark);
    --znui-on-secondary-fixed: var(--md-sys-color-on-secondary-fixed-dark);
    --znui-on-secondary-fixed-variant: var(--md-sys-color-on-secondary-fixed-variant-dark);

    /* Tertiary tokens */
    --znui-tertiary: var(--md-sys-color-tertiary-dark);
    --znui-on-tertiary: var(--md-sys-color-on-tertiary-dark);
    --znui-tertiary-container: var(--md-sys-color-tertiary-container-dark);
    --znui-on-tertiary-container: var(--md-sys-color-on-tertiary-container-dark);
    --znui-tertiary-fixed: var(--md-sys-color-tertiary-fixed-dark);
    --znui-on-tertiary-fixed: var(--md-sys-color-on-tertiary-fixed-dark);
    --znui-on-tertiary-fixed-variant: var(--md-sys-color-on-tertiary-fixed-variant-dark);

    /* Error tokens */
    --znui-error: var(--md-sys-color-error-dark);
    --znui-on-error: var(--md-sys-color-on-error-dark);
    --znui-error-container: var(--md-sys-color-error-container-dark);
    --znui-on-error-container: var(--md-sys-color-on-error-container-dark);

    /* Surface tokens */
    --znui-surface: var(--md-sys-color-surface-dark);
    --znui-surface-dim: var(--md-sys-color-surface-dim-dark);
    --znui-surface-bright: var(--md-sys-color-surface-bright-dark);

    --znui-surface-container-lowest: var(--md-sys-color-surface-container-lowest-dark);
    --znui-surface-container-low: var(--md-sys-color-surface-container-low-dark);
    --znui-surface-container: var(--md-sys-color-surface-container-dark);
    --znui-surface-container-high: var(--md-sys-color-surface-container-high-dark);
    --znui-surface-container-highest: var(--md-sys-color-surface-container-highest-dark);

    --znui-on-surface: var(--md-sys-color-on-surface-dark);
    --znui-on-surface-variant: var(--md-sys-color-on-surface-variant-dark);
    --znui-outline: var(--md-sys-color-outline-dark);
    --znui-outline-variant: var(--md-sys-color-outline-variant-dark);

    /* Inverse tokens */
    --znui-inverse-surface: var(--md-sys-color-inverse-surface-dark);
    --znui-inverse-on-surface: var(--md-sys-color-inverse-on-surface-dark);
    --znui-inverse-primary: var(--md-sys-color-inverse-primary-dark);

    /* Other tokens */
    --znui-scrim: var(--md-sys-color-scrim-dark);
    --znui-shadow: var(--md-sys-color-shadow-dark);
    --znui-scrollbar-thumb: var(--znui-surface-variant);
}

.ThemeProvider a:link {
    color: var(--znui-primary);
}

.ThemeProvider a:visited {
    color: var(--znui-inverse-primary);
}


/** Deprecated fallbacks **/
.ThemeProvider {
    --znui-background: var(--znui-surface);
    --znui-on-background: var(--znui-on-surface);
    --znui-surface-variant: var(--znui-surface-container-highest)
}


.ThemeProvider {
    -webkit-tap-highlight-color: transparent;
    caret-color: var(--znui-primary);

    font-family: 'Roboto';
}

/*effect style*/
.ThemeProvider .elevation-1 {
    box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.3);
}

.ThemeProvider .elevation-2 {
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2), 0 1px 2px rgba(0, 0, 0, 0.3);
}

.ThemeProvider .elevation-3 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
}

.ThemeProvider .elevation-4 {
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.3), 0 6px 10px rgba(0, 0, 0, 0.2);
}

.ThemeProvider .elevation-5 {
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.3), 0 8px 12px rgba(0, 0, 0, 0.2);
}

.ThemeProvider[data-theme='dark'] .elevation-1 {
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3), 0 3px 3px rgba(0, 0, 0, 0.2);
}

.ThemeProvider[data-theme='dark'] .elevation-2 {
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3), 0 6px 6px rgba(0, 0, 0, 0.2);
}

.ThemeProvider[data-theme='dark'] .elevation-3 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3), 0 4px 8px rgba(0, 0, 0, 0.2);
}

.ThemeProvider[data-theme='dark'] .elevation-4 {
    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.3), 0 6px 10px rgba(0, 0, 0, 0.2);
}

.ThemeProvider[data-theme='dark'] .elevation-5 {
    box-shadow: 0 4px 4px rgba(0, 0, 0, 0.3), 0 8px 12px rgba(0, 0, 0, 0.2);
}

/**
 * Scrollbar
 * For WebKit Specific
 */
.ThemeProvider ::-webkit-scrollbar {
    width: 0;
    height: 0;
}

.ThemeProvider ::-webkit-scrollbar-track {
    background: transparent;
}

.ThemeProvider * {
    scrollbar-gutter: stable;
}

.ThemeProvider ::-webkit-scrollbar-thumb {
    background: var(--znui-scrollbar-thumb);
}